{"version":3,"file":"component---src-pages-index-jsx-42c4f5391950572381e9.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/social-link/index.jsx","webpack://gatsby-starter-default/./src/components/profile/index.jsx","webpack://gatsby-starter-default/./src/components/simple-taglist/index.jsx","webpack://gatsby-starter-default/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport { FaInstagram, FaFacebook, FaLinkedin, FaGithub } from \"react-icons/fa\";\r\nimport { SiVelog } from \"react-icons/si\";\r\nimport { MdOutlineEmail } from \"react-icons/md\";\r\nimport { BsFillRssFill } from \"react-icons/bs\";\r\n\r\nconst EmojiLink = styled.span`\r\n  cursor: pointer;\r\n  color: ${props => props.theme.emoji};\r\n`;\r\n\r\nconst RssLink = styled(EmojiLink)`\r\n  color: ${props => props.theme.emoji};\r\n`;\r\n\r\nconst StyledRssIcon = styled(BsFillRssFill)`\r\n  color: ${props => props.theme.emoji};\r\n`;\r\n\r\nconst socialEmojis = {\r\n  github: <FaGithub className=\"icon\" size=\"26\" />,\r\n  instagram: <FaInstagram className=\"icon\" size=\"26\" />,\r\n  facebook: <FaFacebook className=\"icon\" size=\"26\" />,\r\n  linkedin: <FaLinkedin className=\"icon\" size=\"26\" />,\r\n  velog: <SiVelog className=\"icon\" size=\"26\" />,\r\n  email: <MdOutlineEmail className=\"icon\" size=\"26\" />,\r\n};\r\n\r\nconst StyledSocialLinks = styled.div`\r\n  display: flex;\r\n  gap: 14px;\r\n  margin-left: 15px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst SocialLinks = ({ socialLinks }) => {\r\n  return (\r\n    <StyledSocialLinks>\r\n      <RssLink>\r\n        <Link to=\"/rss.xml\">\r\n          <StyledRssIcon className=\"icon\" size=\"26\" />\r\n        </Link>\r\n      </RssLink>\r\n      {Object.entries(socialLinks).map(([key, link]) => (\r\n        key === 'email' ? (\r\n          <a key={key} href={`mailto:${link}`}>\r\n            <EmojiLink>\r\n              {socialEmojis[key]}\r\n            </EmojiLink>\r\n          </a>\r\n        ) : (\r\n          <Link key={key} to={link}>\r\n            <EmojiLink>\r\n              {socialEmojis[key]}\r\n            </EmojiLink>\r\n          </Link>\r\n        )\r\n      ))}\r\n    </StyledSocialLinks>\r\n  );\r\n};\r\n\r\nexport default SocialLinks;","import kebabCase from \"lodash.kebabcase\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { siteMetadata } from \"../../../gatsby-config\";\r\nimport SocialLinks from \"../social-link\";\r\n\r\nconst Profile = ({ author, description, siteUrl, keywords, socialLinks}) => {\r\n  const truncatedDescription = truncateText(description, 50);\r\n\r\n  return (\r\n    <div>\r\n      <ProfileStyle>\r\n        <Image siteUrl={siteUrl} />\r\n        <Text>\r\n          <Author>{author}</Author>\r\n          <Description>{truncatedDescription}</Description>\r\n          <KeyWordsStyle>\r\n            {keywords.map((keyword) => (\r\n              <KeyWordStyle key={kebabCase(keyword)}>\r\n                {kebabCase(keyword)}\r\n              </KeyWordStyle>\r\n            ))}\r\n          </KeyWordsStyle>\r\n        </Text>\r\n      </ProfileStyle>\r\n      <SocialLinks socialLinks={socialLinks}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst truncateText = (text, maxLength) => {\r\n  if (text.length <= maxLength) return text;\r\n  return text.slice(0, maxLength) + \"...\";\r\n};\r\n\r\nconst ProfileStyle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 40px;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  margin-left: 25px;\r\n  width: 60%;\r\n`;\r\n\r\nconst Author = styled.div`\r\n  font-size: 25px;\r\n  color: ${(props) => props.theme.main.text};\r\n  padding-bottom: 8px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 16px;\r\n  color: ${(props) => props.theme.profile.description};\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst KeyWordsStyle = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: -3px;\r\n`;\r\n\r\nconst KeyWordStyle = styled.span`\r\n  font-size: 15px;\r\n  margin-right: 13px;\r\n  border-radius: 15px;\r\n  padding: 3px 8px;\r\n  background-color: #484848;\r\n  color: ${(props) => props.theme.main.text};\r\n  background-color: ${(props) => props.theme.profile.keyword};\r\n`;\r\n\r\nconst profileImageUrl =\r\n  typeof window !== \"undefined\" &&\r\n  window.location.host === \"localhost:8000\"\r\n    ? \"http://localhost:8000\"\r\n    : siteMetadata.siteUrl;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${siteMetadata.siteUrl}/profile.png);\r\n  width: 140px;\r\n  height: 140px;\r\n  border: 1px solid transparent;\r\n  border-color: white;\r\n  background-size: cover;\r\n  background-position: center;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport kebabCase from \"lodash.kebabcase\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SimpleTagList = ({ tags, allCount, posts }) => {\r\n  const [showAllTags, setShowAllTags] = useState(false);\r\n  const maxVisibleTags = 20;\r\n\r\n  const filteredPosts = posts || [];\r\n  \r\n  const filteredTags = tags.filter(tag => {\r\n    const privatePosts = filteredPosts.filter(post => \r\n      post.frontmatter && \r\n      post.frontmatter.tags && \r\n      post.frontmatter.tags.includes(tag.fieldValue) && \r\n      post.frontmatter.isPrivate\r\n    );\r\n\r\n    return privatePosts.length === 0;\r\n  });\r\n\r\n  const visibleTags = showAllTags ? filteredTags : filteredTags.slice(0, maxVisibleTags);\r\n\r\n  return (\r\n    <TagListStyle>\r\n      <div>\r\n        <TagTitle>Tags ({filteredTags.length})</TagTitle>\r\n        {filteredTags.length > maxVisibleTags && (\r\n          <ShowMoreButton onClick={() => setShowAllTags(!showAllTags)}>\r\n            {showAllTags ? 'Less' : 'More'}\r\n          </ShowMoreButton>\r\n        )}\r\n        {visibleTags.map(tag => (\r\n          <TagStyle key={kebabCase(tag.fieldValue)}>\r\n            <span>\r\n              <StyledLink to={`/tags/${kebabCase(tag.fieldValue)}/`}>\r\n                {(tag.fieldValue)} <TagCountStyle>({tag.totalCount})</TagCountStyle>\r\n              </StyledLink>\r\n            </span>\r\n          </TagStyle>\r\n        ))}\r\n      </div>\r\n    </TagListStyle>\r\n  );\r\n};\r\n\r\nconst TagListStyle = styled.div`\r\n  margin-left: 50px;\r\n  line-height: 30px;\r\n  display: flex;\r\n  margin-left: 0px;\r\n  padding-bottom: 40px;\r\n  border-bottom: 1.5px solid ${props => props.theme.main.border};\r\n  position: relative;\r\n`;\r\n\r\nconst TagTitle = styled.div`\r\n  font-size: 14px;\r\n  margin-left: 7px;\r\n  margin-bottom: 3px;\r\n  color: ${props => props.theme.tag.text};\r\n  font-weight: bold;\r\n`;\r\n\r\nconst TagStyle = styled.div`\r\n  float: left;\r\n  padding-left: 10px;\r\n  font-size: 13.5px;\r\n  transition: color 1s;\r\n\r\n  &:hover {\r\n    color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  transition: color 1s;\r\n  color: ${props => props.theme.tag.text};\r\n\r\n  &:hover {\r\n    color: #999;\r\n  }\r\n`;\r\n\r\nconst TagCountStyle = styled.span`\r\n  color: ${props => props.theme.tag.count};\r\n  font-size: 13px;\r\n  transition: color 1s;\r\n\r\n  &:hover {\r\n    color: #999;\r\n  }\r\n`;\r\n\r\nconst ShowMoreButton = styled.button`\r\n  background-color: ${props => props.theme.tag.background};\r\n  border: none;\r\n  cursor: pointer;\r\n  color: ${props => props.theme.main.text};\r\n  font-size: 12.5px;\r\n  padding: 3px 6px;\r\n  border-radius: 5px;\r\n  margin-top: 10px;\r\n  position: absolute; \r\n  bottom: 8px;\r\n  left: 5px;\r\n  transition: background-color 0.5s;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.tag.hover};\r\n  }\r\n`;\r\n\r\n\r\nexport default SimpleTagList;\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport PageLayout from  \"../components/layout/page-component\"\r\nimport PostList from \"../components/postlist\"\r\nimport Profile from \"../components/profile\"\r\nimport SimpleTagList from \"../components/simple-taglist\"\r\nimport styled from \"styled-components\"\r\nimport Seo from \"../components/seo\"\r\nimport { siteMetadata } from \"../../gatsby-config.js\";\r\n\r\nconst PostListTemplate = ({ data, location }) => {\r\n  const description = data.site.siteMetadata.description\r\n  const author = data.site.siteMetadata.author\r\n  const siteUrl = data.site.siteMetadata.siteUrl\r\n  const keywords = data.site.siteMetadata.keywords\r\n  const title = data.site.siteMetadata.title;\r\n\r\n  const socialLinks = siteMetadata.socialLinks;\r\n\r\n  const posts = data.allMarkdownRemark.nodes\r\n  const filteredPosts = posts.filter(post => !post.frontmatter.isPrivate);\r\n  const tags = data.allMarkdownRemark.group\r\n\r\n  // 공개인 포스트의 태그와 비공개인 포스트의 태그를 구분하여 개수 계산\r\n  const publicTags = data.allMarkdownRemark.group\r\n    .filter(tag => tag.nodes.some(post => !post.frontmatter.isPrivate))\r\n    .map(tag => ({ ...tag, totalCount: tag.nodes.filter(post => !post.frontmatter.isPrivate).length }));\r\n\r\n  // 필터링된 태그의 개수\r\n  const filteredTagsCount = tags.length - publicTags.reduce((acc, tag) => acc + tag.totalCount, 0);\r\n\r\n  return (\r\n    <PageLayout>\r\n      <Seo title={title} description={description}/>\r\n      <Profile author={author} description={description} siteUrl={siteUrl} keywords={keywords} socialLinks={socialLinks}/>\r\n      <Line/>\r\n      <SimpleTagList tags={publicTags} allCount={filteredTagsCount}/>\r\n      <PostCount>All Posts ({filteredPosts.length})</PostCount>\r\n      <PostList posts={posts}></PostList>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nconst PostCount = styled.div`\r\n  font-size: 15px;\r\n  color: ${props => props.theme.tag.text};\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  padding-top: 30px;\r\n`\r\n\r\nconst Line = styled.div`\r\n  margin-bottom: 10px;\r\n`\r\n\r\nexport default PostListTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n        siteUrl\r\n        keywords\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt(pruneLength: 500, truncate: true)\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          description\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          tags\r\n          series\r\n          previewImage\r\n          isPrivate\r\n        }\r\n      }\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n        nodes {\r\n          frontmatter {\r\n            isPrivate\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["EmojiLink","styled","span","props","theme","emoji","RssLink","StyledRssIcon","BsFillRssFill","socialEmojis","github","className","size","instagram","facebook","linkedin","velog","email","StyledSocialLinks","div","socialLinks","Link","to","Object","entries","map","key","link","href","truncateText","text","maxLength","length","slice","ProfileStyle","Text","Author","main","Description","profile","description","KeyWordsStyle","KeyWordStyle","keyword","Image","window","location","host","siteMetadata","siteUrl","author","keywords","truncatedDescription","kebabCase","TagListStyle","border","TagTitle","tag","TagStyle","StyledLink","TagCountStyle","count","ShowMoreButton","button","background","hover","tags","allCount","posts","showAllTags","setShowAllTags","useState","filteredPosts","filteredTags","filter","post","frontmatter","includes","fieldValue","isPrivate","visibleTags","onClick","totalCount","PostCount","Line","data","site","title","allMarkdownRemark","nodes","group","publicTags","some","filteredTagsCount","reduce","acc"],"sourceRoot":""}