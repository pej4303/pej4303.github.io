{"componentChunkName":"component---src-templates-tag-jsx","path":"/tags/til/","result":{"data":{"allMarkdownRemark":{"totalCount":18,"nodes":[{"excerpt":"1. 📝 문제 요약 문제 URL : https://www.acmicpc.net/problem/1929 난이도 : 백준 실버3 소요시간 : 14분 2. 💡 내 풀이 방법 시도1 접근 방법 입력 소수 찾기 출력 소스 코드 3. 🔍 문제 회고 이 문제는 범위 내의 모든 소수를 찾는 알고리즘을 구현하는 간단한 문제였다. 기본적인 소수 판별 함수를 작성해 정답을 도출했지만 초반에는 2부터 √N까지만 검사하면 된다는 사실을 잊고 전체 범위를 순회했다. 이후 로직을 수정해 불필요한 연산을 줄일 수 있었다. 하지만 2보다 작은 수를 예외 처리하는 부분을 놓친 점은 아쉬웠지만 빠른 시간 내에 문제를 해결한 점은 좋았다. 📚 참조","fields":{"slug":"/archive/study/jakshim-challenge/1/"},"frontmatter":{"title":"[작심큰일] 작심큰일 1일차 TIL","description":"[작심큰일] 작심큰일 1일차 TIL","date":"2025-08-04","tags":["작심큰일","코딩테스트준비","팀스파르타","TIL"],"series":"작심큰일 챌린지 1기","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 DFS/BFS 문제 URL : https://www.acmicpc.net/problem/18126 2. 공부한 내용 본인의 언어로 정리하기 시도1(틀림) 접근 방법 인접행렬을 이용해서 가장 먼 거리를 구했으나 틀렸다. 시도2(틀림) 접근 방법 인접 리스트를 이용해서 풀어보았다. 시도3(맞음) 접근 방법 구글링도 해보고 GPT한테도 반례를 찾아보았으나 무엇때문에 틀린지 몰랐으나.. 자료형의 문제였다. 소스코드 3. 오늘의 회고 문제 상황과 시도 \"양방향\"이라는 단어와 가장 먼 거리를 구하는 문제로 판단했다. DFS 또는 BFS를 활용하면 풀 수 있겠다고 생각했고 그 방향으로 접근했다. 해결 과정 문제 자체는 잘 파악했지만 int형 오버플로우는 전혀 예상하지 못했다. long형으로 변경하니 정답이 나와서 허무한 느낌이 들었다. ㅠㅠ 배운 점 문제를 읽고 적절한 알고리즘을 떠올린 점은 잘했다. 하지만 큰 수가 나올 수 있는 경우를 항상 염두…","fields":{"slug":"/archive/study/99club-codingtest-study/17/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 17일차 TIL + DFS/BFS","description":"99클럽 코테 스터디 17일차 TIL + DFS/BFS","date":"2025-04-22","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 시뮬레이션 문제 URL : https://school.programmers.co.kr/learn/courses/30/lessons/72410 2. 공부한 내용 본인의 언어로 정리하기 시도1(맞음) 접근 방법 문제를 읽고 단계별로 구현을 하였다. 소스 코드 3. 오늘의 회고 문제 상황과 시도 문제를 읽고 단계별로 풀어보면 되겠다고 생각하였다. 해결 과정 문자열 관련 문제라고 생각했는데 풀고 나서 힌트를 보니 시뮬레이션 문제였다. 배운 점 문자열 함수와 정규표현식을 알고있다면 쉽게 풀 수 있는 문제였다.","fields":{"slug":"/archive/study/99club-codingtest-study/16/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 16일차 TIL + 시뮬레이션","description":"99클럽 코테 스터디 16일차 TIL + 시뮬레이션","date":"2025-04-21","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 동적계획법 문제 URL : https://www.acmicpc.net/problem/17484 2. 공부한 내용 본인의 언어로 정리하기 시도1(맞음) 접근 방법 대문자여부를 체크하여 대문자로 변환 소스 코드 3. 오늘의 회고 문제 상황과 시도 해결 과정 배운 점","fields":{"slug":"/archive/study/99club-codingtest-study/14/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 14일차 TIL + 문자열","description":"99클럽 코테 스터디 14일차 TIL + 문자열","date":"2025-04-20","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":true}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 동적계획법 문제 URL : https://www.acmicpc.net/problem/17271 2. 공부한 내용 본인의 언어로 정리하기 시도1 접근 방법 이 10000 이하의 자연수이니까 완전탐색으로 하면 시간초과가 날 수 있음 n분 동안의 모든 조합을 찾는 방법으로 풀어야겠다고 생각했음 소스 코드 3. 오늘의 회고 문제 상황과 시도 문제를 읽고, 처음에는 n분 동안의 모든 경우의 수를 찾아야겠다고 판단했다. 해결 과정 처음에는 동적 계획법 문제라는 생각을 하지 못하고 접근하였다. 배운 점 최근 여러 문제에서 동적 계획법 유형이 반복해서 등장하고 있지만, 아직 구현에 익숙하지 않다. DP가 가장 취약한 부분이라는 점을 다시금 느꼈고, 보다 집중적으로 연습할 필요가 있음을 깨달았다.","fields":{"slug":"/archive/study/99club-codingtest-study/15/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 15일차 TIL + 동적계획법","description":"99클럽 코테 스터디 15일차 TIL + 동적계획법","date":"2025-04-20","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 문자열 문제 URL : https://www.acmicpc.net/problem/2156 2. 공부한 내용 본인의 언어로 정리하기 시도1(맞음) 접근 방법 대문자여부를 체크하여 대문자로 변환 소스 코드 3. 오늘의 회고 문제 상황과 시도 오늘의 문제는 쉬어서 별다른 문제가 없었다. 해결 과정 String보다 char타입이 더 속도가 빠르다고 생각이 들어서 char[] 타입으로 변경하였고 문자열 조작시 불변객체인 String을 그대로 사용하는 것보다 StringBuilder를 이용해서 최적화를 하였다. 배운 점","fields":{"slug":"/archive/study/99club-codingtest-study/13/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 13일차 TIL + 문자열","description":"99클럽 코테 스터디 13일차 TIL + 문자열","date":"2025-04-16","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 동적계획법 문제 URL : https://www.acmicpc.net/problem/2156 2. 공부한 내용 본인의 언어로 정리하기 시도1 접근 방법 배열을 순회하면서 큰 수끼리 더해보며 어떨까? 문제점 연속적으로 포도잔을 마실수 없으므로 문제에 부합하지 않는다. 시도2 접근 방법 모든 경우를 탐색하면서 연속된 3잔을 막는 방식 => 완전탐색 문제점 완전탐색의 최악의 경우 시간복잡도는 O(2^n)으로 보고 n이 20만 넘어도 너무 커진다.  그래서 시간 초과가 발생할 가능성이 높다. 시도3 접근 방법 다이나믹 프로그래밍 알고리즘 Bottom-Up 방식 이용하였다. 소스 코드 3. 오늘의 회고 문제 상황과 시도 문제를 다양한 각도에서 접근해보며 여러 가지 시도를 했고 기본 로직 구성에는 성공했으나 결론적으로 DP를 제대로 구현하지 못했다. 해결 과정 문제를 단순 반복문과 조건문으로 해결하려 했으나 시간 복잡도에서 문제가 발생했다. 이후…","fields":{"slug":"/archive/study/99club-codingtest-study/12/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 12일차 TIL + 동적계획법","description":"99클럽 코테 스터디 12일차 TIL + 동적계획법","date":"2025-04-15","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 이분탐색 문제 URL : https://www.acmicpc.net/problem/16401 2. 공부한 내용 본인의 언어로 정리하기 시도1 소스 코드 이분 탐색 정렬된 배열이나 리스트에서 원하는 값을 빠르게 찾는 알고리즘를 말한다. 반드시 오름차순(또는 내림차순)으로 정렬되어 있어야 한다. 동작 방식 배열의 중간값을 찾는다. 찾는 값이 중간값보다 작으면 왼쪽, 크면 오른쪽으로 탐색 범위를 줄인다. 범위가 좁아질 때까지 반복한다. 사용되는 상황 효율적으로 검색이 필요할 때 예: 값의 존재 여부, 최댓값/최솟값 구하기, 조건을 만족하는 값 찾기, 나무 자르기, 랜선 자르기, 과자 나눠주기 3. 오늘의 회고 문제 상황과 시도 문제를 보고 어떤 알고리즘을 사용해야 할지 바로 떠오르지 않았다. 완전 탐색으로 접근하면 시간 초과가 날 것 같았고, DFS나 BFS 알고리즘도 적용되지 않을 것 같았다. 해결 과정 힌트를 통해 이분탐색을 사용해야 한…","fields":{"slug":"/archive/study/99club-codingtest-study/11/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 11일차 TIL + 이분탐색","description":"99클럽 코테 스터디 11일차 TIL + 이분탐색","date":"2025-04-14","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 탐욕법 문제 URL : https://www.acmicpc.net/problem/1783 2. 공부한 내용 본인의 언어로 정리하기 시도1(틀림) 접근 방법 경우의 수를 전부 탐색해서 최대값을 찾아야 하는 문제인가 싶어 DFS 알고리즘을 떠올렸다. 문제점 DFS는 모든 경로를 탐색하므로 이동 횟수가 많아질 경우 시간 초과 발생 가능성이 있다. 이동 경로를 모두 찾는 게 아니라 이동 가능한 칸 수의 최댓값을 구하는 것이므로 DFS는 적절하지 않는다. 시도2(맞음) 접근 방법 이동할 수 있는 규칙이 제한되어 있다. (체스판 위 나이트 이동과 유사) 이동 규칙 중 2칸 위로 1칸 옆으로 이동만 가능하므로 가능한 이동 방식이 총 4가지이다. 문제에서 주어진 조건을 기반으로 그리디하게 분기 처리하였다. 풀이 핵심 세로 길이가 1인 경우: 이동 불가 →  세로 길이가 2인 경우: 이동 가능한 칸이 제한됨 →  세로가 3 이상인 경우 가로가 7 미만…","fields":{"slug":"/archive/study/99club-codingtest-study/10/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 10일차 TIL + 탐욕법","description":"99클럽 코테 스터디 10일차 TIL + 탐욕법","date":"2025-04-11","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 탐욕법 문제 URL : https://www.acmicpc.net/problem/2437 2. 공부한 내용 본인의 언어로 정리하기 시도1(틀림) 접근 방법 1부터 1000까지 돌면서 가능한 무게를 추로 하나씩 빼본다. 문제점 단순히 무게를 빼면 부분 조합을 체크 할 수 없다. 시도2(맞음) 접근 방법 그리디 알고리즘을 적용해본다. 소스 코드 그리디 알고리즘(Greedy Algorithm) 문제를 해결할 때 가장 최적의 선택을 하는 알고리즘를 말한다. 이 문제에서는 정렬 + 누적합 + 그리디를 이용한 것이지 정렬+누적합 자체가 그리디 알고리즘을 말하는 것이 아니다. 핵심 개념 탐욕적 선택 부분 문제 최적성 장점 계산 속도가 빠르다. 단점 문제에 따라 탐욕적 접근이 실패할 수 있다. 대표적인 문제 동전 거스름돈 회의실 배정 최소 신장 트리 다익스트라 알고리즘 3. 오늘의 회고 문제 상황과 시도 문제를 보고 1부터 1000까지 돌면서 가능한…","fields":{"slug":"/archive/study/99club-codingtest-study/9/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 9일차 TIL + 탐욕법","description":"99클럽 코테 스터디 9일차 TIL + 탐욕법","date":"2025-04-10","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 정규표현식 문제 URL : https://www.acmicpc.net/problem/9996 2. 공부한 내용 본인의 언어로 정리하기 시도1(틀림) 접근 방법 를 기준으로 나눠서 regex[0]으로 시작하면서 regex[1]로 끝나는지 체크하였다. 문제점 중간에 들어갈 내용까지 포함해서 전체가 일치하는지 확인해야한다. 소스 코드 시도2(맞음) 접근 방법 정규표현식을 이용하였다. 소스 코드 3. 오늘의 회고 문제 상황과 시도 단순히 을 기준으로 앞과 뒤를 나눠 비교하는 방식으로 접근했으나 한 번에 통과하지 못했다. 해결 과정 2번째 시도에 바로 정규표현식을 떠올린 점은 좋았다. 배운 점 정규표현식과 String.matches() 메서드를 활용한 점은 긍정적이었다. 하지만 권장 시간인 30분 내에 문제를 해결하지 못한 것은 아쉬운 부분이다. 다음에는 시간 안에 해결할 수 있도록 더 집중해서 풀어보자.","fields":{"slug":"/archive/study/99club-codingtest-study/8/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 8일차 TIL + 정규표현식","description":"99클럽 코테 스터디 8일차 TIL + 정규표현식","date":"2025-04-09","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 스택/큐 문제 URL : https://www.acmicpc.net/problem/10799 2. 공부한 내용 본인의 언어로 정리하기 소스 코드 시도1 3. 오늘의 회고 문제 상황과 시도 문제를 처음 보고 가 생길 때마다 개수를 세면 될 것 같다고 생각했지만 결과가 맞지 않았다.\n괄호의 모양과 위치에 따라 쇠막대기의 잘림 횟수를 정확히 계산해야 하는 문제였기 때문이다.\n괄호가 생길 때마다 단순히 카운트하는 방식으로는 레이저인지 막대기의 끝인지 구분할 수 없어서 올바른 풀이 방법이 될 수 없었다. 해결 과정 다양한 접근 방식을 검색해보며 스택을 활용한 풀이를 참고했다. 배운 점 힌트를 보지 않고 문제를 읽고 스택을 떠올린 점은 좋았다. 다만 문제를 더 꼼꼼히 읽고 조건을 정확히 파악한 후에 접근하는 연습이 필요하다고 느꼈다.\n앞으로 다양한 문제를 접하며 사고력을 더 키워야겠다.","fields":{"slug":"/archive/study/99club-codingtest-study/7/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 7일차 TIL + 스택/큐","description":"99클럽 코테 스터디 7일차 TIL + 스택/큐","date":"2025-04-08","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 DFS/BFS 문제 URL : https://www.acmicpc.net/problem/4963 2. 공부한 내용 본인의 언어로 정리하기 소스 코드 시도1 3. 오늘의 회고 문제 상황과 시도 이전에 DFS 알고리즘 문제를 풀어본 경험이 있었지만 이번 문제 풀이에서는 제대로 적용하지 못했다. 해결 과정 검색을 통해 다양한 접근 방식을 참고했다. 배운 점 DFS/BFS 알고리즘에 대한 이해를 높이기 위해 더 많은 문제를 풀어봐야겠다.","fields":{"slug":"/archive/study/99club-codingtest-study/6/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 6일차 TIL + DFS/BFS","description":"99클럽 코테 스터디 6일차 TIL + DFS/BFS","date":"2025-04-07","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 투포인터 문제 URL : https://www.acmicpc.net/problem/2559 2. 공부한 내용 본인의 언어로 정리하기 투포인터 정렬된 배열이나 리스트에서 두 개의 포인터를 사용하여 문제를 해결하는 방법을 말한다. 주로 연속된 부분 배열, 구간 합, 정렬된 배열에서 특정 조건을 만족하는 쌍 찾기 등에 사용된다. 소스 코드 시도1 3. 오늘의 회고 문제 상황과 시도 초반에 문제를 잘못 이해하여 연속적인 구간의 합을 구해야 했는데 특정 인덱스끼리의 합을 구하는 방식으로 풀었다. 해결 과정 생각한대로 쉽게 구현이 되었다. 배운 점 처음에는 단순한 시뮬레이션 문제라고 생각했지만 힌트를 보고 투 포인터 알고리즘이 활용된다는 것을 알게 되었다.\n문제의 특성을 정확히 파악하는 것이 중요하다는 점을 다시 한번 느꼈다.","fields":{"slug":"/archive/study/99club-codingtest-study/5/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 5일차 TIL + 투포인터","description":"99클럽 코테 스터디 5일차 TIL + 투포인터","date":"2025-04-04","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 DFS/BFS 문제 URL : https://www.acmicpc.net/problem/2468 2. 공부한 내용 본인의 언어로 정리하기 DFS(깊이 우선 탐색, Depth-First Search) 그래프를 탐색할 때 한 방향으로 갈 수 있을 만큼 깊이 들어가고 더 이상 갈 곳이 없으면 뒤로 돌아와 다른 경로를 탐색하는 방식이다. 스택(Stack) 또는 재귀를 사용해서 구현한다. 사용 사례: 백트래킹, 퍼즐(미로 찾기, 체스 나이트 이동 등), 위상 정렬 BFS(너비 우선 탐색, Breadth-First Search) 그래프를 탐색할 때 가까운 노드부터 차례대로 방문하는 방식이다. 큐(Queue)를 이용해 구현한다. 사용 사례: 최단 경로 찾기(미로, GPS), 네트워크 탐색, 웹 크롤링 소스 코드 시도1 3. 오늘의 회고 문제 상황과 시도 문제를 이해하는 것조차 쉽지 않았다. 특히 물에 잠기지 않는 높이가 왜 존재하지 않는지 의문이 …","fields":{"slug":"/archive/study/99club-codingtest-study/4/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 4일차 TIL + DFS/BFS","description":"99클럽 코테 스터디 4일차 TIL + DFS/BFS","date":"2025-04-03","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 시뮬레이션 문제 URL : https://school.programmers.co.kr/learn/courses/30/lessons/161990 2. 공부한 내용 본인의 언어로 정리하기 시뮬레이션 문제에서 주어진 조건을 그대로 구현하여 해결하는 방법을 말한다. 보통 격자 이동, 회전 같은 문제에서 많이 사용된다. 소스 코드 시도1 3. 오늘의 회고 문제 상황과 시도 문제를 읽고 최단 거리를 구해야 한다고 판단하여 DFS나 BFS 알고리즘을 고려했다.\n그러나 검색을 통해 이러한 접근이 필요하지 않다는 것을 알게 되었다. 해결 과정 머릿속에 떠오르는 방식대로 2차원 배열을 만들어 필요한 변수들을 계산하며 문제를 해결했다. 배운 점 지문에서 요구하는 사항을 정확하게 파악하는 습관을 기르자.","fields":{"slug":"/archive/study/99club-codingtest-study/3/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 3일차 TIL + 시뮬레이션","description":"99클럽 코테 스터디 3일차 TIL + 시뮬레이션","date":"2025-04-02","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 동적계획법 문제 URL : https://www.acmicpc.net/problem/14495 2. 공부한 내용 본인의 언어로 정리하기 동적계획법(Dynamic Programming, DP) 복잡한 문제를 작은 부분 문제로 나누어 해결한 후 그 결과를 저장하여 동일한 계산을 반복하지 않도록 하는 최적화 기법을 말한다. 구현 방법 Top-Down (메모이제이션, Memoization) 재귀를 사용하여 해결한다. 이미 계산한 값을 저장하고 필요할 때 다시 사용한다. Bottom-Up (타뷸레이션, Tabulation) 작은 문제부터 해결하여 큰 문제를 해결한다. 반복문을 사용하여 점진적으로 결과를 계산한다. 소스 코드 시도1 : int형 -> long형으로 변경 시도2 : long형 -> BigInteger 타입으로 변경 시도3 3. 오늘의 회고 문제 상황과 시도 처음에는 int형을 사용해 제출했지만 틀렸다는 결과가 나왔다. n의 최대값인…","fields":{"slug":"/archive/study/99club-codingtest-study/2/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 2일차 TIL + 동적계획법","description":"99클럽 코테 스터디 2일차 TIL + 동적계획법","date":"2025-04-01","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},{"excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 에라토스테네스의 체 문제 URL : https://www.acmicpc.net/problem/1929 2. 공부한 내용 본인의 언어로 정리하기 소수 1과 자기 자신만을 약수로 가지는 수를 말한다. 0, 1은 소수가 아니다. 소수를 찾는 방법 소인수 분해를 이용하는 방법 에라토스테네스의 체를 이용하는 방법 에라토스테네스의 체 소수를 빠르게 찾는 알고리즘을 말한다. 시간 복잡도가 줄어들게 된다. 원리 소수를 구하고자 하는 범위만큼 배열을 할당한다. 처음 모든 숫자를 소수라고 가정하기 위해서 true로 초기화한다. 2부터 시작해서 특정 수의 배수에 해당하는 수를 모두 지운다.(지울 때 자기자신은 지우지 않고 이미 지워진 수는 건너뛴다.) 2부터 시작하여 남아있는 수를 모두 출력한다. 소스 코드 3. 오늘의 회고 소수의 개념이 기억나지 않아 개념을 찾아보고 코드를 작성해보았다. 처음 시도한 방법은 M과 N 사이의 모든 수를 반복문을 돌면서 소…","fields":{"slug":"/archive/study/99club-codingtest-study/1/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 1일차 TIL + 에라토스테네스의 체 ","description":"99클럽 코테 스터디 1일차 TIL","date":"2025-03-31","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}}]}},"pageContext":{"tag":"TIL"}},"staticQueryHashes":[],"slicesMap":{}}