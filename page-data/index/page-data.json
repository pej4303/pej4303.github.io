{"componentChunkName":"component---src-pages-index-jsx","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"보통사람","description":"Dev Note","author":"pej4303","siteUrl":"https://pej4303.github.io","keywords":["java","backend","blog"]}},"allMarkdownRemark":{"nodes":[{"excerpt":"if(kakao) 는 카카오 그룹의 기술 비전을 공개하고 기술적 성과를 소개하는 대표 개발자 컨퍼런스입니다. 매년 참여를 희망하며 신청했지만 올해 처음으로 당첨되는 행운을 얻어 마지막 날 행사에 참석할 수 있었습니다. 0. 셔틀버스 & 굿즈 오전 8시 20분까지 양재역에 도착해 셔틀버스를 타고 행사장으로 이동했습니다. 버스에 타자마자 굿즈를 나눠주셔서 기분 좋게 시작할 수 있었습니다.  이번 행사는 경기도 용인에 위치한 카카오 AI 캠퍼스에서 진행되었는데요. 날씨도 좋고 캠퍼스 건물 역시 인상적이었습니다. 곳곳에 비치된 물, 음료, 견과류 등 간식 덕분에 행사 내내 편하게 즐길 수 있었던 점도 만족스러웠습니다.  1. Panel Talk 오전 10시 오프닝 세션이 시작되었습니다. 이 시간에는 카카오 계열사들이 AI 기술을 어떻게 활용하고 있는지 구체적으로 소개했는데요. 특히 카카오페이와 카카오뱅크가 이상 거래 탐지 시스템(FDS)에 AI를 적용하고 있다는 점이 인상 깊었습니다.  …","fields":{"slug":"/archive/review/1/"},"frontmatter":{"title":"[후기] if(kakao) 2024","description":"if(kakaoAI) 2024 후기","date":"October 25, 2024","tags":["컨퍼런스"],"series":"","previewImage":"oop.png","isPrivate":false}},{"excerpt":"스터디에서 다형적참조에 대해 발표하게 되어 정리해보고자 합니다. 0. 서론 다형적 참조에 대해 설명하기 전에 먼저 다형성(Polymorphism)에 대해 알아보죠. 다형성(Polymorphism)은 객체지향 프로그래밍의 중요한 개념중 하나로 여러가지 형태를 가질 수 있는 능력을 의미합니다. 예시를 들자면, 다형성(Polymorphism)은 부모 클래스 타입의 변수가 자식 클래스 타입의 객체를 참조할 수 있다는 것을 뜻합니다. 1. 다형적 참조란? 다시 돌아와서 다형적 참조(Polymorphic Reference)에 대해 알아보죠. 다형적 참조(Polymorphic Reference)는 부모 클래스 타입의 인스턴스로 자식 클래스 타입의 인스턴스를 참조 할 수 있는 기능을 의미합니다. 이는 다형성을 실현하는 방법 중 하나입니다. 다형성과 비슷하다고 생각할 수 있지만 다형성과 다형적 참조는 보시다싶이 서로 다른 개념입니다.\n다형성이 더 포괄적인 개념이죠.\n 2. 예제코드 Animal 클…","fields":{"slug":"/archive/java/1/"},"frontmatter":{"title":"[Java] 다형적 참조","description":"다형적 참조","date":"September 28, 2024","tags":["Java","Study"],"series":"Java","previewImage":"java_logo.png","isPrivate":false}},{"excerpt":"0. 서론 최근 면접을 보러 다니면서  Git 브랜치 전략에 대해 설명해 달라는 기술 질문을 공통적으로 받게 되었습니다. 사실 Git으로 소스 commit만 했지, 깊이있게 공부 하지 않았기 때문에 해당 질문에 대답 할 수 없었습니다. 따라서, Git 브랜치 전략에 대해 정리해보고자 합니다. 1. Git 브랜치 전략이란? Git은 브랜치라는 것을 사용하는데요. 브랜치는 특정 시점 스냅샷 같은 개념이라고 생각하시면 됩니다. 브랜치를 사용하면 한 프로젝트에서 서로 여러 작업을 동시에 수행하면서도, 작업간의 영향을 최소화 할 수 있습니다. 이런 Git의 브랜치를 관리하는 전략을 Git 브랜치 전략이라고 말합니다. 2. Git 브랜치 전략 사용 목적 그렇다면 Git 브랜치 전략을 사용하는 목적이 뭘까요? Git 브랜치 전략을 사용하는 목적에는 여러가지가 있지만 문제가 생겼을 때 빠르게 복구하기 위해서라고 생각합니다. 앞서 설명한 것처럼 브랜치를 사용하면 여러 가지 작업을 동시에 안전하게 …","fields":{"slug":"/archive/tech/1/"},"frontmatter":{"title":"[기술면접] Git 브랜치 전략","description":"Git 브랜치 전략","date":"September 04, 2024","tags":["Tech","Git"],"series":"기술면접","previewImage":"writing-help.png","isPrivate":false}},{"excerpt":"1. 현상 A팝업 -> B팝업 -> C팝업으로 호출하는 경우 B팝업에서만 팝업 호출 시 해당 화면이 reload 되는 현상이 발생했다. 2. 원인 form 태그 안에  button 태그가 1개만 있는 경우에 onclick() 이벤트와 동시에 submit()도 같이 동작된다. 그래서 발생한 오류였다. 3. 해결 방법1) 방법2) 이런 방법 말고도 검색해보면 다른 방법이 많이 있지만 나의 경우에는 이 2가지 방법으로 했을 때 오류가 발생하지 않았다. button 태그에 대해서 좀 더 알아보다가 재미난 글을 발견하였다. 👉🏻버튼에 타입을 쓰는 이유 (button type='button') 참조 https://nykim.work/96","fields":{"slug":"/error/2/"},"frontmatter":{"title":"[오류] 팝업 여러개 띄울때 화면 reload 발생","description":"팝업 여러개 띄울때 화면 reload 발생","date":"August 25, 2024","tags":["Error","Web"],"series":"오류 모음집","previewImage":"how.png","isPrivate":false}},{"excerpt":"1. 현상  메소드를 이용해서 js를 분기처리 하는데 SSL 적용이 된 운영서버에서 http 리소스가 로드되어서 에러가 발생하였다. 2. 원인 web서버에서 was서버를 호출할때는 http 통신이기 때문에 isSecure() 메소드에서 false가 나온 것이다. 3. 해결 방법1) 방법2) 위와 같이 2가지 방법이 있는데 처음에는 x-forwarded-proto를 이용해서 하였으나 로드밸런서가 없는 로컬과 개발에서는 null로 나와서 방법 2로 변경하였다. x-forwarded-proto 클라이언트가 로드밸런서에 접속할 때 사용한 프토토콜을 식별하는 표준 헤더 참조 https://zetawiki.com/wiki/X-Forwarded-Proto","fields":{"slug":"/error/3/"},"frontmatter":{"title":"[오류] https 도메인인데 request.isSecure() return false인 경우","description":"https 도메인인데 request.isSecure() return false인 경우","date":"August 25, 2024","tags":["Error","Web"],"series":"오류 모음집","previewImage":"how.png","isPrivate":false}},{"excerpt":"1. 현상 2. 원인 3. 해결 참조","fields":{"slug":"/sample/test/"},"frontmatter":{"title":"test","description":"tet","date":"August 25, 2024","tags":["Error","Web"],"series":"오류 모음집","previewImage":"java_logo.png","isPrivate":true}},{"excerpt":"환경설정 개발툴 : InteliJ Spring Boot : 2.7.14 Hibernate : 5.6.15 Java : 11 Gradle SpringBoot 검색을 해보면 application.properties 파일에 이 내용을 추가하면 파라미터 바인딩이 출력된다고 하는데, 저의 경우에는 그렇게 해도 나오지 않았습니다. 이 글을 참고하여 하니 원하는 결과가 나왔습니다. 👉🏻hibernate 의 완성된(?) 쿼리를 확인 하는 방법 문의 드립니다 1. bulid.gradle 파일에 추가 2. logback.xml 파일 추가  폴더 밑에  파일을 만들어줍니다. 3. 실행 결과 파라미터가 같이 나오는 것을 확인 할 수 있습니다.\n 참조 https://www.inflearn.com/questions/59014/hibernate-%EC%9D%98-%EC%99%84%EC%84%B1%EB%90%9C-%EC%BF%BC%EB%A6%AC%EB%A5%BC-%ED%99%95%EC%9D%B8-%ED%95%9…","fields":{"slug":"/archive/jpa/1/"},"frontmatter":{"title":"[JPA] Hibernate 쿼리 파라미터 바인딩 출력","description":"Hibernate 쿼리 파라미터 바인딩 출력","date":"August 25, 2024","tags":["JPA","Hibernate"],"series":"JPA","previewImage":"jpa.png","isPrivate":false}},{"excerpt":"환경설정 개발툴 : InteliJ Spring Boot : 2.7.14 Quartz : 2.3.2 Java : 11 Gradle SpringBoot Spring Boot에서 Quartz 연동 하는 예제를 소개합니다. 1. bulid.gradle 파일에 추가 2. @Scheduled 어노테이션을 이용 스케쥴러를 적용할 메소드에  어노테이션을 사용합니다. 이 붙은 파일에  어노테이션를 추가합니다. 추가 하지 않으면 스케쥴러가 실행되지 않습니다. @EnableScheduling 스케쥴러를 기능을 켜는 역할을 하며, @Scheduled 어노테이션을 찾아서 실행을 시킨다. 3. 실행 결과 5초마다 실행 된것을 확인 할 수 있습니다.\n 참조 https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/annotation/EnableScheduling.html","fields":{"slug":"/archive/spring/1/"},"frontmatter":{"title":"[Spring Boot] Quartz 연동 예제","description":"Spring Boot Quartz 연동 예제","date":"August 25, 2024","tags":["Srping Boot","Quartz"],"series":"Spring Boot","previewImage":"springboot_logo.png","isPrivate":false}},{"excerpt":"1. 현상 개발서버 https 적용으로 아래와 같이 http 요청 블락 에러가 발생하였다. 그래서 아래의 메타 태그를 추가해 줬다.  하지만 개발서버 https 적용을 해제하면서부터 화면 접속시 자동으로  로 붙어서 js, css를 읽는 경우가 발생하였다. 2. 원인 https때문에 추가했던 메타 태그의 문제로, content-security-policy를 설정할 경우 자동으로 https로 호출해 주는 것이었다.  3. 해결 해당 태그를 주석처리 하면 현상은 해결되지만, 개발서버에 https 적용 시 http 요청 블락 에러를 이 방법 말고 다른 방법으로 해야 될 것 같다. 로컬은 http인데 개발서버는 https인 경우에는 이 메타태그를 사용하는 것은 좋은 방법이 아닌 것 같다. 참조 https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/upgrade-insecure-requests","fields":{"slug":"/error/1/"},"frontmatter":{"title":"[오류] 자동으로 도메인에 https가 붙는 경우","description":"자동으로 도메인에 https가 붙는 경우","date":"August 23, 2024","tags":["Error","Web"],"series":"오류 모음집","previewImage":"how.png","isPrivate":false}},{"excerpt":"Default Private Posts This is a default private post. It's recommended not to delete this posts 😵 (현재 이 포스트는 삭제하지 말아주세요.)","fields":{"slug":"/default/private-default/"},"frontmatter":{"title":"Default Private","description":null,"date":"January 01, 2024","tags":["private-tag"],"series":null,"previewImage":"banned.png","isPrivate":true}},{"excerpt":"환경설정 개발툴 : 이클립스 Spring : 4.3.3 Quartz : 2.3.0 Tomcat : 8.5 Java : 8 서버 :CentOS 1. 현상 개발서버에서 톰캣 프로세스가 여러개가 뜨면서 메모리 너무 많이 잡아먹는 현상이 발생하였다.\nnetstate -tnlp 하면 8080포트는 하나만 나오고, ps -ef | grep tomcat 하면 여러개 나왔다. 2. 원인 검색을 하다가 아래의 글을 보고 quartz 스케쥴러의 문제라고 생각이 들었다.\n톰캣 서버가 종료되어도 이미 실행된 job 스레드는 종료되지 않고 계속 남는다. 👉🏻톰켓 프로세스 종료 이슈 3. 해결 destroy-method 속성을 이용해서 SchedulerFactoryBean 클래스에 있는 destroy() 메소드를 추가해줬다. + 추가(2023.10.13) 위 방법으로 적용 후에도 계속 발생하여 젠킨스 배포시 실행중인 톰캣 프로세스 모두 종료시키는 쉘 스크립트를 추가하였다. 참조 https://docs.spr…","fields":{"slug":"/error/4/"},"frontmatter":{"title":"[오류] 톰캣 프로세스 여러개 뜨는 경우","description":"톰캣 프로세스 여러개 뜨는 경우","date":"August 12, 2023","tags":["Error","Tomcat"],"series":"오류 모음집","previewImage":"how.png","isPrivate":false}},{"excerpt":"💡 현 포스트는 about 페이지에서도 조회 가능합니다. 포스트를 삭제하지 말고, 이 곳에다 본인만의 멋진 소개 글을 작성해주세요.","fields":{"slug":"/default/about/"},"frontmatter":{"title":"Gatsby Starter Haon 저자에 대해 소개합니다.","description":null,"date":"January 01, 2022","tags":["about"],"series":null,"previewImage":null,"isPrivate":true}}],"group":[{"fieldValue":"Error","totalCount":5,"nodes":[{"frontmatter":{"isPrivate":false}},{"frontmatter":{"isPrivate":false}},{"frontmatter":{"isPrivate":true}},{"frontmatter":{"isPrivate":false}},{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"Git","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"Hibernate","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"JPA","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"Java","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"Quartz","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"Srping Boot","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"Study","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"Tech","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"Tomcat","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"Web","totalCount":4,"nodes":[{"frontmatter":{"isPrivate":false}},{"frontmatter":{"isPrivate":false}},{"frontmatter":{"isPrivate":true}},{"frontmatter":{"isPrivate":false}}]},{"fieldValue":"about","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":true}}]},{"fieldValue":"private-tag","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":true}}]},{"fieldValue":"컨퍼런스","totalCount":1,"nodes":[{"frontmatter":{"isPrivate":false}}]}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}