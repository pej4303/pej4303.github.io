{"componentChunkName":"component---src-pages-search-jsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"1. 현상 개발서버 https 적용으로 아래와 같이 http 요청 블락 에러가 발생하였다. 그래서 아래의 메타 태그를 추가해 줬다.  하지만 개발서버 https 적용을 해제하면서부터 화면 접속시 자동으로  로 붙어서 js, css를 읽는 경우가 발생하였다. 2. 원인 https때문에 추가했던 메타 태그의 문제로, content-security-policy…","fields":{"slug":"/how-to-use/error/"},"frontmatter":{"date":"August 23, 2024","title":"[오류] 자동으로 도메인에 https가 붙는 경우","description":"자동으로 도메인에 https가 붙는 경우","tags":["Error","Web"],"series":"오류 모음집","previewImage":null,"isPrivate":null},"rawMarkdownBody":"\r\n## 1. 현상 \r\n개발서버 https 적용으로 아래와 같이 http 요청 블락 에러가 발생하였다.\r\n```\r\nThis request has been blocked; the content must be served over HTTPS.\r\n```\r\n그래서 아래의 메타 태그를 추가해 줬다. \r\n```html\r\n<meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\">\r\n```\r\n하지만 개발서버 https 적용을 해제하면서부터 화면 접속시 자동으로 `https://` 로 붙어서 js, css를 읽는 경우가 발생하였다.\r\n\r\n## 2. 원인\r\n```html\r\n<meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\">\r\n```\r\nhttps때문에 추가했던 메타 태그의 문제로, content-security-policy를 설정할 경우 자동으로 https로 호출해 주는 것이었다. \r\n```\r\nThe HTTP Content-Security-Policy (CSP) upgrade-insecure-requests directive instructs user agents to treat all of a site's insecure URLs (those served over HTTP) as though they have been replaced with secure URLs (those served over HTTPS).\r\nHTTP Content-Security-Policy(CSP) upgrade-insecure-requests\r\n```\r\n\r\n## 3. 해결\r\n해당 태그를 주석처리 하면 현상은 해결되지만, 개발서버에 https 적용 시 http 요청 블락 에러를 이 방법 말고 다른 방법으로 해야 될 것 같다. 로컬은 http인데 개발서버는 https인 경우에는 이 메타태그를 사용하는 것은 좋은 방법이 아닌 것 같다.\r\n\r\n+ 참조\r\n  + https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/upgrade-insecure-requests\r\n"},{"excerpt":"1. Markdown Based This template is based on Markdown. To write a post, create a directory under  and write the post in Markdown format. For example, create a directory called  under  and write the po…","fields":{"slug":"/how-to-use/writing-posts/"},"frontmatter":{"date":"March 07, 2024","title":"How to Write Markdown Posts? ✍️","description":null,"tags":["Introduce","About"],"series":"how to use this template?","previewImage":"writing.png","isPrivate":null},"rawMarkdownBody":"\r\n## 1. Markdown Based\r\n\r\nThis template is based on Markdown. To write a post, create a directory under `/contents/posts` and write the post in Markdown format.\r\n\r\nFor example, create a directory called `how-to-use` under `/contents/posts` and write the post in an `index.md` file. In this case, the URL of the post will be `http(s)://your-domain/how-to-use`.\r\n\r\n---\r\n\r\n## 2. Meta Information\r\n\r\nOnce you create the Markdown file, you must enter the meta information for the post. The required information is as follows.\r\n\r\n```\r\n---\r\ntitle: How to Write Markdown Posts and Detailed Features\r\ndescription: Let's learn how to use this template.\r\ndate: \"2024-03-02\"\r\ntags:\r\n  - Introduce\r\n  - About\r\nseries: how to use this template?\r\n// isPrivate: true\r\n---\r\n```\r\n\r\nThe explanations for each meta information are as follows:\r\n\r\n- `title` : Title of the post\r\n- `description` : Summary of the post. Optional.\r\n- `date` : Posting date\r\n- `tags` : List of tags\r\n- `series` : Series (similar to the category concept)\r\n- `isPrivate` : Privacy setting. If you want to make the post private, set \"isPrivate: true\".\r\n\r\n---\r\n\r\n## 3. Adding Images to the Post\r\n\r\nTo add an image to a post, use the following format. Note that the image should be located in the same folder as the Markdown file.\r\n\r\n```\r\n![](./image-name)\r\n```\r\n\r\nHere is an example of adding an image named `image1.png`.\r\n\r\n![](./image1.png)\r\n\r\n---\r\n\r\n## 4. Supports Code Highlight\r\n\r\nYou can create code blocks in posts. Below is a code block written in the Java programming language.\r\n\r\n```java\r\npublic String getLines(){\r\n  StringBuilder stringBuilder = new StringBuilder();\r\n  repeatPrint(stringBuilder);\r\n  return stringBuilder.toString();\r\n}\r\n\r\nprivate void repeatRows(StringBuilder stringBuilder){\r\n  for(int i=0; i<10; i++){\r\n    repeatRow(stringBuilder);\r\n    stringBuilder.append(\"two\");\r\n  }\r\n}\r\n\r\nprivate void repeatRow(StringBuilder stringBuilder){\r\n  for(int i=0; i<5; i++){\r\n    stringBuilder.append(\"one\");\r\n  }\r\n}\r\n```\r\n\r\n---\r\n\r\n## 5. Post Preview Image (Thumbnail)\r\n\r\nThe post preview feature is also available, similar to thumbnails.\r\n\r\n### 5-1. Adding a Preview Image\r\n\r\nThe path for adding a preview image is slightly different from the path for adding an image within the post. While the image for the post should be in the same folder as the Markdown file, the preview thumbnail image should be added in the `static` folder.\r\n\r\nIf you have placed a preview image named `writing.png` in the static folder, the post will be displayed as follows.\r\n\r\n![](./result.png)\r\n\r\nFeel free to customize your preview!\r\n\r\n### 5-2. Default Preview Image (default.png)\r\n\r\nIf no preview image is added, the default image `default.png` will be displayed as the preview. `default.png` is located in the static folder. If you want to customize it, feel free to modify the `default.png` image.\r\n\r\n---\r\n\r\n## 6. Toc (Table of Contents)\r\n\r\n![](./toc.png)\r\n\r\nYou can see the table of contents feature in the upper right corner of the post. The text generated in the table of contents is based on the titles in h1, h2, and h3 tags.\r\n\r\n---\r\n\r\n## 7. Feature Summary\r\n\r\nTo summarize the post features:\r\n\r\n- `Markdown`\r\n- `Tags`\r\n- `Series`\r\n- `Share` (Sharing feature: copy post link / share on Facebook / share on Twitter)\r\n- `Private mode` (post public / private)\r\n- `Toc`\r\n"},{"excerpt":"1. MarkDown 기반 이 템플릿은 Markdown 작성법을 기반으로 합니다. 글 작성을 위해  아래 디렉토리에 포스트를 생성하고 마크다운 형식으로 작성해야 합니다. 예를들어  아래 디렉토리에  라는 디렉토리(폴더)를 생성하고  파일에 포스트를 작성하면 됩니다. 이 예시의 경우 포스트의 URL 이  로 지정됩니다. 2. 메타 정보 마크다운 파일을 생성…","fields":{"slug":"/how-to-use/포스트 작성하기/"},"frontmatter":{"date":"March 04, 2024","title":"마크다운 포스트 작성법, 작성시 세부 기능들 ✍️","description":"현 템플릿을 어떻게 사용하는지 알아봅시다.","tags":["Introduce","About"],"series":"how to use this template?","previewImage":"writing.png","isPrivate":null},"rawMarkdownBody":"\r\n## 1. MarkDown 기반\r\n\r\n이 템플릿은 Markdown 작성법을 기반으로 합니다. 글 작성을 위해 `/contents/posts` 아래 디렉토리에 포스트를 생성하고 마크다운 형식으로 작성해야 합니다.\r\n\r\n예를들어 `/contents/posts` 아래 디렉토리에 `how-to-use` 라는 디렉토리(폴더)를 생성하고 `index.md` 파일에 포스트를 작성하면 됩니다. 이 예시의 경우 포스트의 URL 이 `http(s)://your-domain/how-to-use` 로 지정됩니다.\r\n\r\n---\r\n\r\n## 2. 메타 정보\r\n\r\n마크다운 파일을 생성했다면, 해당 포스트에 대한 메타정보를 필수로 기입해야 합니다. 기입 정보는 아래와 같습니다.\r\n\r\n```\r\n---\r\ntitle: 포스트 작성법, 작성시 세부 기능들\r\ndescription: 현 템플릿을 어떻게 사용하는지 알아봅시다.\r\ndate: \"2024-03-02\"\r\ntags:\r\n  - Introduce\r\n  - About\r\nseries: how to use this template?\r\n// isPrivate: true\r\n---\r\n```\r\n\r\n각 메타 정보에 대한 설명은 다음과 같습니다.\r\n\r\n- `title` : 포스트의 제목\r\n- `description` : 포스트에 대한 설명 요약. 생략시\r\n- `date` : 포스팅 날짜\r\n- `tags` : 태그 리스트\r\n- `series` : 시리즈 (카테고리 개념과 유사)\r\n- `isPrivate` : 비공개 여부. (현 포스트에 대해 비공개를 원할시 \"isPrivate: true\" 를 지정해주세요.)\r\n\r\n---\r\n\r\n## 3. 포스트 내부에 이미지 추가\r\n\r\n포스트에 이미지를 추가시, 아래와 같은 형식으로 이미지를 첨부할 수 있습니다. 이미지는 동일한 폴더 내에 (즉, 현재 markdown 파일과 동일한 폴더 안에) 위치해야 한다는 점을 유의해주세요.\r\n\r\n```\r\n![](./이미지 이름)\r\n```\r\n\r\n아래는 `image1.png` 라는 이름의 이미지를 첨부한 예시입니다.\r\n\r\n![](./image1.png)\r\n\r\n---\r\n\r\n## 4. 코드 하이라이트 지원\r\n\r\n포스트에 코드 블럭을 생성 가능합니다. 아래는 JAVA 언어를 기반으로 작성된 코드 블럭입니다.\r\n\r\n```java\r\npublic String getLines(){\r\n  StringBuilder stringBuilder = new StringBuilder();\r\n  repeatPrint(stringBuilder);\r\n  return stringBuilder.toString();\r\n}\r\n\r\nprivate void repeatRows(StringBuilder stringBuilder){\r\n  for(int i=0; i<10; i++){\r\n    repeatRow(stringBuilder);\r\n    stringBuilder.append(\"two\");\r\n  }\r\n}\r\n\r\nprivate void repeatRow(StringBuilder stringBuilder){\r\n  for(int i=0; i<5; i++){\r\n    stringBuilder.append(\"one\");\r\n  }\r\n}\r\n```\r\n\r\n---\r\n\r\n## 5. 포스트 미리보기 이미지 (썸네일)\r\n\r\n포스트 미리보기 기능도 존재합니다. 썸네일이라고 봐도 좋겠습니다.\r\n\r\n### 5-1. 미리보기 추가\r\n\r\n미리보기 이미지를 첨부하는 경로는 앞서 살펴본 이미지 추가 경로와 조금 다릅니다. 포스트 내부에 이미지를 추가할 땐 마크다운 파일과 동일한 폴더 내에 위치시키면 되지만, 미리보기 썸네일 이미지는 `static` 이라는 폴더내에 이미지를 추가해줘야 합니다.\r\n\r\n`writing.png` 이라는 미리보기 이미지를 static 폴더내 위치했다면, 포스트는 다음과 같이 조회됩니다.\r\n\r\n![](./result.png)\r\n\r\n멋진 미리보기를 마음껏 꾸며보세요!\r\n\r\n### 5-2. 디폴트 미리보기 이미지 (default.png)\r\n\r\n미리보기 이미지를 추가하지 않았다면, 기본적으로 `default.png` 이미지를 미리보기로 표기하고 있습니다. `default.png`\r\n는 static 파일 내에 존재합니다. 만약 커스터마이징을 원한다면 자유롭게 `default.png` 이미지를 수정하세요.\r\n\r\n---\r\n\r\n## 6. Toc (목차)\r\n\r\n![](./toc.png)\r\n\r\n포스트 우측 상단을 보면 목차 기능이 존재하는 것을 볼 수 있습니다. 목차에 생성되는 텍스트는 h1, h2, h3 에 타이틀에 기반해 있습니다.\r\n\r\n---\r\n\r\n## 7. 기능 요약\r\n\r\n포스트 기능을 정리해보자면 다음과 같습니다.\r\n\r\n- `Markdown`\r\n- `Tags`\r\n- `Series`\r\n- `Share` (공유하기 기능 : 포스트 링크 복사 / Facebook 공유 / Twitter 공유)\r\n- `private mode` (포스트 공개 / 비공개)\r\n- `Toc`\r\n"},{"excerpt":"Default Private Posts This is a default private post. It's recommended not to delete this posts 😵 (현재 이 포스트는 삭제하지 말아주세요.)","fields":{"slug":"/default/private-default/"},"frontmatter":{"date":"January 01, 2024","title":"Default Private","description":null,"tags":["private-tag"],"series":null,"previewImage":"banned.png","isPrivate":true},"rawMarkdownBody":"\r\n## Default Private Posts\r\n\r\nThis is a default private post. It's recommended not to delete this posts 😵\r\n\r\n(현재 이 포스트는 삭제하지 말아주세요.)\r\n"},{"excerpt":"💡 현 포스트는 about 페이지에서도 조회 가능합니다. 포스트를 삭제하지 말고, 이 곳에다 본인만의 멋진 소개 글을 작성해주세요.","fields":{"slug":"/default/about/"},"frontmatter":{"date":"January 01, 2022","title":"Gatsby Starter Haon 저자에 대해 소개합니다.","description":null,"tags":["공부법"],"series":"Introduce About Writer","previewImage":null,"isPrivate":null},"rawMarkdownBody":"\r\n> 💡 현 포스트는 about 페이지에서도 조회 가능합니다. 포스트를 삭제하지 말고, 이 곳에다 본인만의 멋진 소개 글을 작성해주세요.\r\n"}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}