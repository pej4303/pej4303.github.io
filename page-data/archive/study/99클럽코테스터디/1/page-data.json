{"componentChunkName":"component---src-templates-post-jsx","path":"/archive/study/99클럽코테스터디/1/","result":{"data":{"site":{"siteMetadata":{"title":"보통사람","author":"pej4303"}},"markdownRemark":{"id":"5531670d-38ce-5e28-9198-7afa0529e36f","excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 에라토스테네스의 체 문제 URL : https://www.acmicpc.net/problem/1929 2. 공부한 내용 본인의 언어로 정리하기 소수 1과 자기 자신만을 약수로 가지는 수를 말한다. 0,…","html":"<p><img src=\"/images/99_java.png\" alt=\"99클럽 코테 스터디\"></p>\n<h2 id=\"1-오늘의-학습-키워드\" style=\"position:relative;\"><a href=\"#1-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\"1 오늘의 학습 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 오늘의 학습 키워드</h2>\n<ul>\n<li>에라토스테네스의 체</li>\n<li>문제 URL : <a href=\"https://www.acmicpc.net/problem/1929\">https://www.acmicpc.net/problem/1929</a></li>\n</ul>\n<h2 id=\"2-공부한-내용-본인의-언어로-정리하기\" style=\"position:relative;\"><a href=\"#2-%EA%B3%B5%EB%B6%80%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B3%B8%EC%9D%B8%EC%9D%98-%EC%96%B8%EC%96%B4%EB%A1%9C-%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"2 공부한 내용 본인의 언어로 정리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 공부한 내용 본인의 언어로 정리하기</h2>\n<ul>\n<li>\n<p>소수</p>\n<ul>\n<li>1과 자기 자신만을 약수로 가지는 수를 말한다.</li>\n<li>0, 1은 소수가 아니다.</li>\n<li>소수를 찾는 방법\n<ul>\n<li>소인수 분해를 이용하는 방법</li>\n<li>에라토스테네스의 체를 이용하는 방법</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>에라토스테네스의 체</p>\n<ul>\n<li>소수를 빠르게 찾는 알고리즘을 말한다.</li>\n<li>시간 복잡도가 줄어들게 된다.</li>\n<li>원리\n<ul>\n<li>소수를 구하고자 하는 범위만큼 배열을 할당한다.</li>\n<li>처음 모든 숫자를 소수라고 가정하기 위해서 true로 초기화한다.</li>\n<li>2부터 시작해서 특정 수의 배수에 해당하는 수를 모두 지운다.(지울 때 자기자신은 지우지 않고 이미 지워진 수는 건너뛴다.)</li>\n<li>2부터 시작하여 남아있는 수를 모두 출력한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>소스 코드</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 입력</span>\n        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> isPrime <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// boolean 배열을 사용해서 공간을 최소화</span>\n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>isPrime<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 처음 모든 숫자를 소수라고 가정하기 위해서</span>\n\n        isPrime<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        isPrime<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/**\n        * Q. i * i &lt;= n까지만 반복하는 이유?\n        * A. 그 이전 값들은 이미 작은 수의 배수로 처리됐기 때문이다\n        *    예를 들어 i=3이면 3×2=6은 이미 i=2일 때 처리됐으므로 3×3=9부터 시작하면 된다\n        */</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 2부터 sqrt(n)까지 반복</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isPrime<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 이미 지워진 숫자도 다시 검사 될 수 있으므로 필요함</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// i의 배수 지우기</span>\n                    isPrime<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 출력</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isPrime<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"3-오늘의-회고\" style=\"position:relative;\"><a href=\"#3-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\" aria-label=\"3 오늘의 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 오늘의 회고</h2>\n<p>소수의 개념이 기억나지 않아 개념을 찾아보고 코드를 작성해보았다. 처음 시도한 방법은 M과 N 사이의 모든 수를 반복문을 돌면서 소수인지 판별하는 방법이었다. 하지만 오답처리가 되었다. 그래서 int형의 범위 초과인지 싶어서 int형을 long형으로 변경해보았지만 여전히 오답처리가 되었다.\n그래서 소수 판별 알고리즘을 찾아보았는데 에라토스테네스의 체 알고리즘을 사용하면 더 빠르게 소수를 판별할 수 있다는 것을 알게 되었다.\n에라토스테네스의 체 알고리즘을 좀 더 공부해서 코드를 작성해보고 이해하는 시간이 필요할 것 같다.</p>\n<h2 id=\"4-내일-학습할-것\" style=\"position:relative;\"><a href=\"#4-%EB%82%B4%EC%9D%BC-%ED%95%99%EC%8A%B5%ED%95%A0-%EA%B2%83\" aria-label=\"4 내일 학습할 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 내일 학습할 것</h2>\n<ul>\n<li>에라토스테네스의 체 알고리즘 코드 이해하기</li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"#1-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\">1. 오늘의 학습 키워드</a></li>\n<li><a href=\"#2-%EA%B3%B5%EB%B6%80%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B3%B8%EC%9D%B8%EC%9D%98-%EC%96%B8%EC%96%B4%EB%A1%9C-%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0\">2. 공부한 내용 본인의 언어로 정리하기</a></li>\n<li><a href=\"#3-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\">3. 오늘의 회고</a></li>\n<li><a href=\"#4-%EB%82%B4%EC%9D%BC-%ED%95%99%EC%8A%B5%ED%95%A0-%EA%B2%83\">4. 내일 학습할 것</a></li>\n</ul>","frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 1일차 TIL + 에라토스테네스의 체 ","description":"99클럽 코테 스터디 1일차 TIL","date":"March 31, 2025","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},"previous":{"fields":{"slug":"/archive/java/2/"},"frontmatter":{"title":"[Java] String 클래스","isPrivate":false}},"next":{"fields":{"slug":"/archive/study/99클럽코테스터디/2/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 2일차 TIL + 동적계획법","isPrivate":false}}},"pageContext":{"id":"5531670d-38ce-5e28-9198-7afa0529e36f","previousPostId":"b7592b29-b141-5256-9fe8-bd22a0cafc76","nextPostId":"2b7404ba-e0b9-5a56-9d40-e58f315393e4"}},"staticQueryHashes":[],"slicesMap":{}}