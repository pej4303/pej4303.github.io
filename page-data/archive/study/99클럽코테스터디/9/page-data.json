{"componentChunkName":"component---src-templates-post-jsx","path":"/archive/study/99클럽코테스터디/9/","result":{"data":{"site":{"siteMetadata":{"title":"보통사람","author":"pej4303"}},"markdownRemark":{"id":"6a6ca495-fb9c-54b4-89bc-f1c0e11f9fa7","excerpt":"99클럽 코테 스터디 1. 오늘의 학습 키워드 탐욕법 문제 URL : https://www.acmicpc.net/problem/2437 2. 공부한 내용 본인의 언어로 정리하기 시도1(틀림) 접근 방법 1부터 100…","html":"<p><img src=\"/images/99_java.png\" alt=\"99클럽 코테 스터디\"></p>\n<h2 id=\"1-오늘의-학습-키워드\" style=\"position:relative;\"><a href=\"#1-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\"1 오늘의 학습 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 오늘의 학습 키워드</h2>\n<ul>\n<li>탐욕법</li>\n<li>문제 URL : <a href=\"https://www.acmicpc.net/problem/2437\">https://www.acmicpc.net/problem/2437</a></li>\n</ul>\n<h2 id=\"2-공부한-내용-본인의-언어로-정리하기\" style=\"position:relative;\"><a href=\"#2-%EA%B3%B5%EB%B6%80%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B3%B8%EC%9D%B8%EC%9D%98-%EC%96%B8%EC%96%B4%EB%A1%9C-%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"2 공부한 내용 본인의 언어로 정리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 공부한 내용 본인의 언어로 정리하기</h2>\n<ul>\n<li>시도1(틀림)\n<ul>\n<li>접근 방법\n<ul>\n<li>1부터 1000까지 돌면서 가능한 무게를 추로 하나씩 빼본다.</li>\n</ul>\n</li>\n<li>문제점\n<ul>\n<li><strong>단순히 무게를 빼면 부분 조합을 체크 할 수 없다.</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">추 무게 : [1,1,3]\n조합 : 1, 2(1+1), 3, 4(1+3), 5(1+1+3)</code></pre></div>\n</li>\n</ul>\n</li>\n<li>시도2(맞음)\n<ul>\n<li>접근 방법\n<ul>\n<li>그리디 알고리즘을 적용해본다.</li>\n</ul>\n</li>\n<li>소스 코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 입력</span>\n        <span class=\"token class-name\">BufferedReader</span> br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> tmpArr <span class=\"token operator\">=</span> br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> inputArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            inputArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>tmpArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/**\n        * 정렬 + 누적합을 이용해서 최소 무게를 구해야함\n        */</span>\n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>inputArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 현재까지 만들 수 있는 무게의 범위</span>\n\n        <span class=\"token comment\">/**\n        * 만약 현재 추의 무게가 result보다 작거나 같다면 result을 확장시킬 수 있음\n        * 그렇지 않다면 result는 만들 수 없는 가장 작은 무게임\n        */</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 이제 무게를 만들 수 없음</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inputArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            result <span class=\"token operator\">+=</span> inputArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//            System.out.println(result);</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 출력</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>그리디 알고리즘(Greedy Algorithm)\n<ul>\n<li>문제를 해결할 때 <strong>가장 최적의 선택을 하는 알고리즘</strong>를 말한다.</li>\n<li><strong>이 문제에서는 정렬 + 누적합 + 그리디를 이용한 것이지 정렬+누적합 자체가 그리디 알고리즘을 말하는 것이 아니다.</strong></li>\n<li>핵심 개념\n<ul>\n<li>탐욕적 선택</li>\n<li>부분 문제 최적성</li>\n</ul>\n</li>\n<li>장점\n<ul>\n<li>계산 속도가 빠르다.</li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>문제에 따라 탐욕적 접근이 실패할 수 있다.</li>\n</ul>\n</li>\n<li>대표적인 문제\n<ul>\n<li>동전 거스름돈</li>\n<li>회의실 배정</li>\n<li>최소 신장 트리</li>\n<li>다익스트라 알고리즘</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-오늘의-회고\" style=\"position:relative;\"><a href=\"#3-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\" aria-label=\"3 오늘의 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 오늘의 회고</h2>\n<ul>\n<li>문제 상황과 시도</li>\n</ul>\n<p>문제를 보고 1부터 1000까지 돌면서 가능한 무게를 추로 하나씩 빼본다라고 생각했지만 문제 풀이의 핵심인 부분 조합 경우를 어떻게 구현해야 할지 떠오르지 않았다.</p>\n<ul>\n<li>해결 과정</li>\n</ul>\n<p>GPT의 도움을 받아 그리디 알고리즘이라는 개념을 접하게 되었고 이 문제에 적합한 해결 방법임을 알게 되었다.</p>\n<ul>\n<li>배운 점</li>\n</ul>\n<p>이번 문제를 통해 그리디 알고리즘의 개념과 그 활용 방법에 대해 알게 되었다. 그리디 알고리즘에 대한 문제를 좀 더 풀어봐야겠다.</p>","tableOfContents":"<ul>\n<li><a href=\"#1-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\">1. 오늘의 학습 키워드</a></li>\n<li><a href=\"#2-%EA%B3%B5%EB%B6%80%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B3%B8%EC%9D%B8%EC%9D%98-%EC%96%B8%EC%96%B4%EB%A1%9C-%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0\">2. 공부한 내용 본인의 언어로 정리하기</a></li>\n<li><a href=\"#3-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\">3. 오늘의 회고</a></li>\n</ul>","frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 9일차 TIL + 탐욕법","description":"99클럽 코테 스터디 9일차 TIL + 탐욕법","date":"April 10, 2025","tags":["99클럽","코딩테스트준비","개발자취업","항해99","TIL"],"series":"99클럽 코테 스터디","previewImage":"how.png","isPrivate":false}},"previous":{"fields":{"slug":"/archive/study/99클럽코테스터디/8/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 8일차 TIL + 정규표현식","isPrivate":false}},"next":{"fields":{"slug":"/archive/study/99클럽코테스터디/10/"},"frontmatter":{"title":"[99클럽 코테 스터디] 99클럽 코테 스터디 10일차 TIL + 탐욕법","isPrivate":false}}},"pageContext":{"id":"6a6ca495-fb9c-54b4-89bc-f1c0e11f9fa7","previousPostId":"34775868-c159-5804-a9ca-2cc49306bf11","nextPostId":"5e2c66ef-e8c2-5413-a106-547d30b4f20f"}},"staticQueryHashes":[],"slicesMap":{}}