{"componentChunkName":"component---src-templates-post-jsx","path":"/archive/algorithm/8/","result":{"data":{"site":{"siteMetadata":{"title":"보통사람","author":"pej4303"}},"markdownRemark":{"id":"faa3c65d-6b31-5e67-9eae-47dc3db7624f","excerpt":"1. 문제 요약 문제 URL : https://school.programmers.co.kr/learn/courses/30/lessons/12915 난이도 : 레벨1 2. 내 풀이 방법 시도1 접근 방법 strings 순회 - for문 이용 strings 정렬시 n…","html":"<h2 id=\"1-문제-요약\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EC%95%BD\" aria-label=\"1 문제 요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요약</h2>\n<ul>\n<li>문제 URL : <a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/12915\">https://school.programmers.co.kr/learn/courses/30/lessons/12915</a></li>\n<li>난이도 : 레벨1</li>\n</ul>\n<h2 id=\"2-내-풀이-방법\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4-%EB%B0%A9%EB%B2%95\" aria-label=\"2 내 풀이 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이 방법</h2>\n<h3 id=\"시도1\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EB%8F%841\" aria-label=\"시도1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시도1</h3>\n<ul>\n<li>접근 방법\n<ul>\n<li>strings 순회 - for문 이용</li>\n<li>strings 정렬시 n번째 글자순으로 - Arrays.sort()</li>\n</ul>\n</li>\n<li>문제점\n<ul>\n<li>이렇게 하면 for문을 할 필요가 없어진다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"시도2\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EB%8F%842\" aria-label=\"시도2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시도2</h3>\n<ul>\n<li>접근 방법\n<ul>\n<li>n번재 글자순으로 정렬되게 - Arrays.sort() 이용</li>\n<li>Comparator를 재정의하여 n번재 글자를 비교 같으면 글자를 비교 => 시간복잡도 O(n log n)</li>\n</ul>\n</li>\n<li>소스 코드\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> strings<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/*\n        방법2)\n        1. n번재 글자순으로 정렬되게 - Arrays.sort() 이용\n        2. Comparator를 재정의하여 n번재 글자를 비교 같으면 글자를 비교\n        => 시간복잡도 O(n log n)\n        */</span>\n        \n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 음수 s1 &lt; s2</span>\n            <span class=\"token comment\">// 같다(0) s1 = s2</span>\n            <span class=\"token comment\">// 양수 s1 > s2</span>\n            <span class=\"token comment\">// 같은 문자열이 여럿 일 경우, 사전순으로 앞선 문자열이 앞쪽에 위치합니다.</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> s2<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> s1<span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token class-name\">Character</span><span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬</span>\n        <span class=\"token keyword\">return</span> strings<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"3-문제-회고\" style=\"position:relative;\"><a href=\"#3-%EB%AC%B8%EC%A0%9C-%ED%9A%8C%EA%B3%A0\" aria-label=\"3 문제 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 문제 회고</h2>\n<ul>\n<li>🔍 시도</li>\n</ul>\n<p>처음에는 for문으로 순회하며 정렬을 직접 구현하려 했지만 Java의 Arrays.sort()와 Comparator를 활용하면 훨씬 간단하고 효율적으로 문제를 해결할 수 있음을 알게 되었다.</p>\n<ul>\n<li>🛠 해결 과정</li>\n</ul>\n<p>Comparator를 람다식을 이용해서 재정의하여 n번째 문자를 기준으로 정렬하고 만약 두 문자의 값이 같을 경우 전체 문자열을 compareTo()로 비교하여 사전순 정렬을 구현하였다.</p>\n<ul>\n<li>✅ 잘한 점</li>\n</ul>\n<p>불필요한 반복문 없이 Java의 내장 정렬 기능을 적극 활용하여 깔끔하고 가독성 있는 코드로 작성하였다. 문제 조건을 정확히 반영해 정렬 기준을 적절히 적용하였다.</p>\n<ul>\n<li>⚠ 개선할 점</li>\n</ul>\n<p>Comparator에 대한 이해가 부족한 부분이 있었으므로 직접 여러 케이스를 만들어 보며 다양한 정렬 기준을 구현해보는 연습이 필요하다.</p>\n<h2 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h2>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EC%95%BD\">1. 문제 요약</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4-%EB%B0%A9%EB%B2%95\">2. 내 풀이 방법</a></p>\n<ul>\n<li><a href=\"#%EC%8B%9C%EB%8F%841\">시도1</a></li>\n<li><a href=\"#%EC%8B%9C%EB%8F%842\">시도2</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-%EB%AC%B8%EC%A0%9C-%ED%9A%8C%EA%B3%A0\">3. 문제 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EC%A1%B0\">참조</a></p>\n</li>\n</ul>","frontmatter":{"title":"[프로그래머스] 프로그래머스 문자열 내 마음대로 정렬하기 Java","description":"문자열 내 마음대로 정렬하기 Java","date":"May 19, 2025","tags":["Algorithm","프로그래머스","코딩테스트"],"series":"프로그래머스","previewImage":"writing.png","isPrivate":false}},"previous":{"fields":{"slug":"/archive/algorithm/7/"},"frontmatter":{"title":"[BOJ] 백준 11720 숫자의 합 Java","isPrivate":false}},"next":{"fields":{"slug":"/archive/algorithm/9/"},"frontmatter":{"title":"[프로그래머스] 프로그래머스 명예의 전당1 Java","isPrivate":false}}},"pageContext":{"id":"faa3c65d-6b31-5e67-9eae-47dc3db7624f","previousPostId":"2318586d-f417-5fe6-a6fa-195460e15ee5","nextPostId":"2bd9e760-293f-5412-9153-cc7c49c04623"}},"staticQueryHashes":[],"slicesMap":{}}