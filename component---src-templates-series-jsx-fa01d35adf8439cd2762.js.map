{"version":3,"file":"component---src-templates-series-jsx-fa01d35adf8439cd2762.js","mappings":"8NAIA,MAYMA,EAAQC,EAAAA,QAAOC,GAAE,2EAATD,CAAS,mFACZE,GAASA,EAAMC,MAAMC,KAAKC,OAOrC,MApBsB,IAA0B,IAAzB,WAACC,EAAU,MAAEC,GAAM,EACtC,MAAMC,EAAuBF,EAAU,SACpB,IAAfA,EAAmB,GAAK,KAAG,UAE/B,OACI,2BACI,gBAACP,EAAK,KAAES,GACR,gBAAC,IAAQ,CAACD,MAAOA,IACf,ECTd,MAQME,EAAcT,EAAAA,QAAOU,IAAG,gFAAVV,CAAU,iKAEDE,GAASA,EAAMC,MAAMC,KAAKO,SAUjDC,EAAOZ,EAAAA,QAAOa,GAAE,yEAATb,CAAS,+BACXE,GAASA,EAAMC,MAAMC,KAAKC,OAKrC,MA1BqB,IAAmB,IAAlB,WAACS,GAAW,EAC9B,OACI,gBAACL,EAAW,KACR,gBAACG,EAAI,KAAEE,GACG,ECHtB,MAAMC,EAASf,EAAAA,QAAOgB,QAAO,+EAAdhB,CAAc,MAG7Be,EAAOE,OAASC,EAChBH,EAAOI,QAAUC,EAEjB,Q,oBCiBA,MApBuB,IAAoC,IAAnC,YAACC,EAAW,KAAEC,EAAI,SAAEC,GAAS,EACjD,MAAMT,EAAaO,EAAYG,OACzBjB,EAAQe,EAAKG,kBAAkBC,MAC/BpB,EAAaC,EAAMoB,OACnBC,EAAcC,EAAAA,aAAaD,YAEjC,OACI,gBAAC,IAAU,KACP,gBAAC,IAAG,CAACE,MAAOhB,EAAYc,YAAaA,IACrC,gBAAC,EAAM,KACH,gBAAC,EAAOX,OAAM,CACZH,WAAYA,IAEd,gBAAC,EAAOK,QAAO,CAACb,WAAYA,EAAYC,MAAOA,KAE1C,C","sources":["webpack://gatsby-starter-default/./src/components/series/series-content/index.jsx","webpack://gatsby-starter-default/./src/components/series/series-header/index.jsx","webpack://gatsby-starter-default/./src/components/series/series-component/index.jsx","webpack://gatsby-starter-default/./src/templates/series.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PostList from \"../../postlist\";\r\n\r\nconst SeriesContent = ({totalCount, posts}) => {\r\n    const seriesDescription = `${totalCount} post${\r\n        totalCount === 1 ? \"\" : \"s\"} found.`\r\n\r\n    return (\r\n        <div>\r\n            <Count>{seriesDescription}</Count>       \r\n            <PostList posts={posts}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Count = styled.h3`\r\n  color: ${props => props.theme.main.text};\r\n  font-size: 20px;\r\n  margin-bottom: 20px;\r\n  font-weight: 800;\r\n  padding-top: 20px;\r\n`\r\n\r\nexport default SeriesContent","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SeriesHeader = ({seriesName}) => {\r\n    return (\r\n        <HeaderStyle>\r\n            <Name>{seriesName}</Name>\r\n        </HeaderStyle>\r\n    )\r\n}\r\n\r\nconst HeaderStyle = styled.div`\r\n  margin-bottom: 30px;\r\n  border-bottom: 1px solid ${props => props.theme.main.border};\r\n  padding-bottom: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: 600;\r\n  line-height: 300%;\r\n`\r\n\r\n\r\nconst Name = styled.h2`\r\n  color: ${props => props.theme.main.text};\r\n  font-size: 38px;\r\n`\r\n\r\n\r\nexport default SeriesHeader","import styled from \"styled-components\";\r\nimport SeriesContent from \"../series-content\";\r\nimport SeriesHeader from \"../series-header\";\r\n\r\nconst Series = styled.section`\r\n`\r\n\r\nSeries.Header = SeriesHeader\r\nSeries.Content = SeriesContent\r\n\r\nexport default Series;\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport PageLayout from \"../components/layout/page-component\"\r\nimport Series from \"../components/series/series-component\"\r\nimport Seo from \"../components/seo\"\r\nimport { siteMetadata } from \"../../gatsby-config\"\r\n\r\nconst SeriesTemplate = ({pageContext, data, location}) => {\r\n    const seriesName = pageContext.series\r\n    const posts = data.allMarkdownRemark.nodes;\r\n    const totalCount = posts.length\r\n    const description = siteMetadata.description;\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Seo title={seriesName} description={description}/>\r\n            <Series>\r\n                <Series.Header\r\n                  seriesName={seriesName}\r\n                />\r\n                <Series.Content totalCount={totalCount} posts={posts}/>\r\n            </Series>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\n\r\nexport default SeriesTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query($series: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { series: { in: [$series] } } }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        excerpt(pruneLength: 500, truncate: true)\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          description\r\n          date\r\n          tags\r\n          series\r\n          previewImage\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["Count","styled","h3","props","theme","main","text","totalCount","posts","seriesDescription","HeaderStyle","div","border","Name","h2","seriesName","Series","section","Header","SeriesHeader","Content","SeriesContent","pageContext","data","location","series","allMarkdownRemark","nodes","length","description","siteMetadata","title"],"sourceRoot":""}